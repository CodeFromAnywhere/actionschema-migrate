{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "type": "object",
  "definitions": {
    "OpenapiConfig": {
      "type": "object",
      "properties": {
        "slug": { "type": "string" },
        "openapiUrl": {
          "type": "string",
          "description": "Can be an URL or relative path, leading to an OpenAPI specification."
        },
        "envKeyName": {
          "type": "string",
          "description": "Must provide an authorization key that is available as environment variable, to be used as Authorization header (bearer by default)"
        },
        "operationIds": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "If given, selects only these operationIds from the openapi."
        }
      },
      "required": ["slug", "openapiUrl", "envKeyName"]
    }
  },
  "properties": {
    "relativeOutputPath": {
      "type": "string",
      "description": "Folder directory where SDK should end up"
    },

    "crudSlugPrefix": {
      "type": "string",
      "description": "Prefix to use for slugs. Can be useful to keep proper naming"
    },

    "relativeJsonSchemaBasePath": {
      "type": "string",
      "description": "Any JSON schemas we need in typescript"
    },
    "remoteJsonSchemaUrls": {
      "type": "array",
      "items": { "type": "string" }
    },

    "openapis": {
      "type": "array",
      "items": { "$ref": "#/definitions/OpenapiConfig" },
      "description": "Remote or local (partial) OpenAPIs that need to be included in the SDK."
    },

    "relativeAgentBasePath": {
      "type": "string",
      "description": "Agent schemas that need to become an agent API"
    },
    "remoteAgentUrls": {
      "type": "array",
      "items": {
        "type": "string"
      }
    },
    "customAgentServer": {
      "type": "string"
    },
    "relativeFilePromptBasePath": {
      "type": "string",
      "description": "File prompts that need to be accessible through the actionschema CLI"
    },
    "remoteFilePromptUrls": {
      "type": "array",
      "items": {
        "type": "string"
      }
    },
    "relativeCrudSchemaBasePath": {
      "type": "string",
      "description": "CRUD schemas we need to be a CRUD API"
    },
    "remoteCrudSchemaUrls": {
      "type": "array",
      "items": {
        "type": "string"
      }
    },
    "customCrudServer": {
      "type": "string"
    }
  }
}
